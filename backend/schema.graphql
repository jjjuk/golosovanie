### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

type Event {
  approved: Boolean!
  id: Int!
  name: String!
  startTime: String!
}

type Mutation {
  createPoll(firstStageTime: String!, secondStageTime: String!): Poll
  createVote(name: String!, pollId: Int!, startTime: String!): Vote
  login(name: String!, password: String!): AuthPayload
  signup(name: String!, password: String!): AuthPayload
}

type Participant {
  event: Event!
  eventId: Int!
  id: Int!
  user: User!
  userId: Int!
}

type Poll {
  active: Boolean!
  createdAt: String!
  firstStageTime: String!
  id: Int!
  secondStageTime: String!
  user: User!
  userId: Int!
}

type Query {
  ok: Boolean!
}

type Subscription {
  currentPoll: Poll
  newVotes(pollId: Int!): Vote
}

type User {
  id: Int!
  name: String!
  online: Boolean
  password: String
}

type Vote {
  createdAt: String!
  event: Event!
  eventId: Int!
  id: Int!
  poll: Poll!
  pollId: Int!
  user: User!
  userId: Int!
}
